""""
Script to decode the tokenized generated output of the model into readable sentences again
Does only work if the sentence piece tokenizer was used for the tokenization
"""
import argparse
from utils.helpers import load_tokenizer


def de_tokenize_text(model_output, new_file):
    """
    :param model_output: path to the file with the text generated by the model
    :param new_file: path to the file where the formatted text should be written to
    """
    tokenizer = load_tokenizer("sentpiece", "de")
    with open(model_output, "r", encoding="utf-8") as old_f:
        with open(new_file, "w", encoding="utf-8") as new_f:
            for line in old_f:
                tokenized_line = line.strip(). split(" ")
                decoded_text = tokenizer.decode(tokenized_line)
                new_f.write(decoded_text)
                new_f.write("\n")


if __name__=="__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--file", required=True, help="file with the sentences generated by the model (or any other "
                                                     "sentences tokenized using sentencepiece")
    parser.add_argument("--new", required=True, help="file where the de-tokenized text should be saved")
    args = vars(parser.parse_args())

    de_tokenize_text(args["file"], args["new"])